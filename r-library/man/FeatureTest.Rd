% Generated by maven-r-jsr223-plugin: do not edit by hand

\name{FeatureTest}

\alias{FeatureTest}

\title{FeatureTest}

\usage{\preformatted{
library(testRapi)
J = JavaApi$new();
instance <- J$FeatureTest$new(...);
}}

\description{
	A test of the jsr223 templating
}

\details{
	

this is a details comment
}

\examples{
## -----------------------------------
## Method `FeatureTest$doHelloWorld`
## -----------------------------------
  An example
  Spans many lines

## -----------------------------------
## Method `FeatureTest$fluentSetMessage`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$factoryMethod`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$getMessage`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$doSum`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$doSum2`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$objectAsParameter`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$doSomethingWithDataFrame`
## -----------------------------------

## -----------------------------------
## Method `FeatureTest$generateDataFrame`
## -----------------------------------

}

\keyword{java api}

\section{Methods}{
	\subsection{Constructors}{
		\itemize{
			\item \href{#method-new}{\code{J$FeatureTest$new()}}
		}
	}
	\subsection{Static methods}{
		\itemize{
		}
	}
	\subsection{Instance methods}{
		\itemize{
			\item \href{#method-doHelloWorld}{\code{instance$doHelloWorld()}}
			\item \href{#method-fluentSetMessage}{\code{instance$fluentSetMessage(message)}}
			\item \href{#method-factoryMethod}{\code{instance$factoryMethod(a, b)}}
			\item \href{#method-getMessage}{\code{instance$getMessage()}}
			\item \href{#method-doSum}{\code{instance$doSum(a, b)}}
			\item \href{#method-doSum2}{\code{instance$doSum2(a, b)}}
			\item \href{#method-objectAsParameter}{\code{instance$objectAsParameter(otherObj)}}
			\item \href{#method-doSomethingWithDataFrame}{\code{instance$doSomethingWithDataFrame(dataframe)}}
			\item \href{#method-generateDataFrame}{\code{instance$generateDataFrame()}}
			\item \code{instance$clone()}
			\item \code{instance$print()}
		}
	}

	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-new"></a>}}
	
	\subsection{Method \code{new()}}{
		the default no-args constructor
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  J$FeatureTest$new()
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		R6 FeatureTest object: 
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-doHelloWorld"></a>}}
	
	\subsection{Method \code{doHelloWorld()}}{
		Description of a hello world function
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$doHelloWorld()
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@40013051: this java method returns a String
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
  An example
  Spans many lines
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-fluentSetMessage"></a>}}
	
	\subsection{Method \code{fluentSetMessage()}}{
		A fluent method which updates the message in this object, returning the
same object. This is differentiated from factory methods which produce a new
instance of the same class by checking to see if the returned Java object is in the
same memory location as the calling Java object.
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$fluentSetMessage(message)
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
				\item{message the message is a string}{ - (java expects a uk.co.terminological.jsr233plugin.RType@40013051)}
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		R6 FeatureTest object: this should return exactly the same R6 object.
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-factoryMethod"></a>}}
	
	\subsection{Method \code{factoryMethod()}}{
		A fluent method description
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$factoryMethod(a, b)
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
				\item{a}{ - (java expects a uk.co.terminological.jsr233plugin.RType@40013051)}
				\item{b}{ - (java expects a uk.co.terminological.jsr233plugin.RType@40013051)}
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		R6 MoreFeatureTest object: A MoreFeatureTest R6 reference
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-getMessage"></a>}}
	
	\subsection{Method \code{getMessage()}}{
		message desciption
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$getMessage()
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@40013051: The message previously set or maybe null
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-doSum"></a>}}
	
	\subsection{Method \code{doSum()}}{
		The doSum function description = it adds two numerics
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$doSum(a, b)
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
				\item{a the A parameter}{ - (java expects a uk.co.terminological.jsr233plugin.RType@d180961)}
				\item{b the B parameter}{ - (java expects a uk.co.terminological.jsr233plugin.RType@d180961)}
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@d180961: A+B of course
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-doSum2"></a>}}
	
	\subsection{Method \code{doSum2()}}{
		Do sum 2 uses native ints rather than RNumerics
It shoudl throw an error if given something that cannot be an integer
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$doSum2(a, b)
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
				\item{a the A parameter}{ - (java expects a uk.co.terminological.jsr233plugin.RType@163df259)}
				\item{b the B parameter}{ - (java expects a uk.co.terminological.jsr233plugin.RType@163df259)}
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@163df259: A+B of course
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-objectAsParameter"></a>}}
	
	\subsection{Method \code{objectAsParameter()}}{
		
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$objectAsParameter(otherObj)
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
				\item{otherObj}{ - (java expects a uk.co.terminological.jsr233plugin.RType@77998ea7)}
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@5a78b52b: 
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-doSomethingWithDataFrame"></a>}}
	
	\subsection{Method \code{doSomethingWithDataFrame()}}{
		Consumes a data frame and logs its length
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$doSomethingWithDataFrame(dataframe)
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
				\item{dataframe}{ - (java expects a uk.co.terminological.jsr233plugin.RType@d978ab9)}
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@7672960e: 
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
	\if{html}{\out{<hr>}}
	\if{html}{\out{<a id="method-generateDataFrame"></a>}}
	
	\subsection{Method \code{generateDataFrame()}}{
		Creates a basic dataframe and returns it
	}

	\subsection{Usage}{
		\if{html}{\out{<div class="r">}}
		\preformatted{
  library(testRapi)
  J <- JavaApi$new()
  instance <- J$FeatureTest$new(...);
  instance$generateDataFrame()
		}
		\if{html}{\out{</div>}}
	}
	
	\subsection{Arguments}{
		\if{html}{\out{<div class="arguments">}}
		\describe{
			\itemize{
			}
		}
		\if{html}{\out{</div>}}
	}

	\subsection{Returns}{
		uk.co.terminological.jsr233plugin.RType@d978ab9: 
	}

	\subsection{Examples}{
		\if{html}{\out{<div class="r example copy">}}
		\preformatted{
		}
		\if{html}{\out{</div>}}
	}
}